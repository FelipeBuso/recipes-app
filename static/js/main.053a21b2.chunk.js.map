{"version":3,"sources":["images/shareIcon.svg","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","images/restaurante.png","images/profileIcon.svg","images/searchIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/panela.gif","images/bebida.gif","images/emptyDish.png","pages/Login.js","context/RecipesAppContext.jsx","components/DrinkCard.jsx","components/MealCard.jsx","services/API.js","components/SearchBar.jsx","components/Categories.jsx","components/ButtonSearchTop.jsx","components/Header.jsx","components/MenuInferior.js","components/LoadingMeal.jsx","components/LoadingDrink.jsx","components/Cards.jsx","pages/Recipes.jsx","components/DetailsMealsComp.jsx","pages/DetailsMeals.jsx","components/DetailsDrinkComp.jsx","pages/DetailsDrink.jsx","components/Perfil.js","components/ExploreFoodAndDrink.jsx","components/ExploreInitial.jsx","components/IngredientMealCard.jsx","components/IngredientDrinkCard.jsx","components/ExploreCards.jsx","components/ExploreAreaCards.jsx","components/ExploreArea.jsx","pages/Explore.jsx","pages/FavoriteRecipes.jsx","pages/NotFound.jsx","pages/RecipesDone.jsx","components/RecipeMealProgressComp.jsx","pages/RecipeMealProgress.jsx","components/RecipeDrinkProgressComp.jsx","pages/RecipeDrinkProgress.jsx","Routes.js","App.js","serviceWorker.js","context/RecipesAppProvider.jsx","index.js"],"names":["module","exports","Login","useState","email","setEmail","password","setPassword","className","src","restaurante","alt","type","value","placeholder","data-testid","onChange","target","test","length","to","disabled","onClick","localStorage","setItem","JSON","stringify","RecipesAppContext","createContext","DrinkCard","recipe","i","location","useLocation","pathname","idDrink","strDrinkThumb","strDrink","MealCard","idMeal","strMealThumb","strMeal","error","getRecipesFromMealAPI","url","callback","fetch","then","response","json","data","meals","alert","checkResponseMeal","getRecipesFromCocktailAPI","drinks","checkResponseCockTail","getRecipes","term","path","termSearch","getRecipesFromTheMealAPI","getRecipesfromTheCockTailAPI","fetchAPI","URL","a","API","SearchBar","useContext","changeHaveRecipes","saveMealRecipes","saveDrinkRecipes","setIsFilterByCategory","textInputValue","setTextInputValue","radioInputValue","setRadioInputValue","handlerInputRadio","e","handlerInputText","htmlFor","name","id","updateDataToSearch","Categories","categories","categoryClicked","setCategoryClicked","firstFiveCategories","filter","item","index","filterRecipiesByCategory","api","category","console","log","map","key","strCategory","ButtonSearchTop","openSearchBar","setIsSearch","isSearch","searchIcon","Header","searchButtonElements","profileIcon","area","pageTitle","split","title","charAt","toUpperCase","slice","end","pageTitle1","title1","pageTitle2","title2","getPageTitle","MenuInferior","drink","exploreIcon","mealIcon","LoadingMeal","panela","LoadingDrink","bebida","Cards","haveRecipes","mealRecipes","drinkRecipes","recipes","renderRecipes","Recipes","isFilterByCategory","saveCategories","history","useHistory","useEffect","push","DetailsMealsComp","propsDrink","recipesDetails","handleClickCopy","handleClickFavorites","favorite","copyText","getIngredients","recipesRecommendation","buttonHiddenClass","inProgress","handleClickRecipesProgress","shareIcon","blackHeartIcon","whiteHeartIcon","strInstructions","array","strYoutube","embedVideo","frameBorder","_","indexFilter","strAlcoholic","DetailsMeals","setRecipesDetails","setDrinkRecipeId","setCopyText","setButtonHiddenClass","setFavorite","setRecipesRecommendation","setInProgress","recipesSelectedId","requestFood","responseFood","getApiDetailsRecipesFood","recipesInProgress","parse","getItem","includes","requestDrink","responseDrink","recommendationFetch","doneRecipes","atualStorage","some","retriveFavoties","copy","window","href","setInterval","favoriteObj","strArea","alcoholicOrNot","image","storageFavorite","rmvFavorite","rmvFavoriteStringfy","newRecipeStringfy","ingredients","Object","entries","measures","ingredient","measure","DetailsDrinkComp","DetailsDrink","getApiDetailsRecipesDrink","Perfil","emailUser","clear","ExploreFoodAndDrink","getRamdonRoute","ExploreInitial","IngredientMealCard","strIngredient","setTimeout","IngredientDrinkCard","strIngredient1","ExploreCards","setIngredients","isLoading","setIsLoading","food","ExploreAreaCards","ExploreArea","arrayArea","setArrayArea","areaSelected","setAreaSelected","handlerArea","Explore","FavoriteRecipes","favoriteRecipes","copyUrl","setCopyUrl","setFilter","handleFilter","copyLink","clickdisfavor","newFavorites","width","NotFound","emptyDish","RecipesDone","recipesDone","rpsDone","setRpsDone","filterRecipesDone","filterResult","doneDate","itemOfMap","indexOfMap","tags","itemTag","indexTag","renderTags","RecipeMealProgressComp","propsMealProgress","setFavorited","handleChangeCheck","recipeProgress","ingredientChecked","favorited","checkBox","ingredienteNotNul","newFavoriteStorage","concat","itens","checked","date","Date","svDate","getDate","getMonth","getFullYear","objDoneRecipes","strTags","newDoneStorage","addRecipeDone","RecipeMealProgress","setRecipeProgress","isLoaded","setIsloaded","setIngredientChecked","saved","ingredientsSaved","favoriteRecipesFiltered","cocktails","filteredIngredientes","prevState","RecipeDrinkProgressComp","propsDrinkProgress","RecipeDrinkProgress","Routes","exact","component","App","Boolean","hostname","match","RecipesAppProvider","children","setMealRecipes","setDrinkRecipes","setHaveRecipes","setCategories","setFilterByCategory","context","bool","recipesDrinks","Provider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.053a21b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/restaurante.0d67ea27.png\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/panela.c6b447c6.gif\";","module.exports = __webpack_public_path__ + \"static/media/bebida.95cc5974.gif\";","module.exports = __webpack_public_path__ + \"static/media/emptyDish.520d4b6d.png\";","import React, { useState } from 'react';\n// import Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport '../styles/Login.css';\nimport restaurante from '../images/restaurante.png';\n\nexport default function Login() {\n  const [email, setEmail] = useState('teste@algo.com');\n  const [password, setPassword] = useState('1234576');\n\n  const handleChangeEmail = ({ target: { value } }) => {\n    const checkEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (checkEmail.test(value)) return setEmail(value);\n    return setEmail('');\n  };\n\n  const handleChangePassword = ({ target: { value } }) => {\n    const checkPassword = 6;\n    if (value.length > checkPassword) return setPassword(value);\n    return setPassword('');\n  };\n\n  const LoginStorage = () => {\n    localStorage.setItem('mealsToken', '1');\n    localStorage.setItem('cocktailsToken', '1');\n    localStorage.setItem('user', JSON.stringify({ email }));\n  };\n\n  return (\n    <div className=\"login\">\n      <img\n        className=\"logo\"\n        src={ restaurante }\n        alt=\"restaurante\"\n      />\n      <input\n        className=\"input-login\"\n        type=\"text\"\n        value={ email }\n        placeholder=\"Digite seu e-mail\"\n        data-testid=\"email-input\"\n        onChange={ handleChangeEmail }\n      />\n      <input\n        className=\"input-login\"\n        type=\"password\"\n        value={ password }\n        placeholder=\"Digite sua senha\"\n        data-testid=\"password-input\"\n        onChange={ handleChangePassword }\n      />\n      <Link to=\"/comidas\">\n        <button\n          className=\"button\"\n          type=\"button\"\n          data-testid=\"login-submit-btn\"\n          disabled={ !email || !password }\n          onClick={ LoginStorage }\n        >\n          Entrar\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst RecipesAppContext = createContext();\n\nexport default RecipesAppContext;\n","import React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../styles/DrinkCard.css';\n\nexport default function DrinkCard({ recipe, i }) {\n  const location = useLocation();\n  return (\n    <div className=\"drink-card\" data-testid={ `${i}-recipe-card` }>\n      <Link to={ `${location.pathname}/${recipe.idDrink}` }>\n        <img\n          src={ recipe.strDrinkThumb }\n          alt={ recipe.strDrink }\n          data-testid={ `${i}-card-img` }\n        />\n        <p data-testid={ `${i}-card-name` }>{ recipe.strDrink }</p>\n      </Link>\n    </div>\n  );\n}\n\nDrinkCard.propTypes = {\n  recipe: PropTypes.shape({\n    strDrink: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n    idDrink: PropTypes.string,\n  }).isRequired,\n  i: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../styles/MealCard.css';\n\nexport default function MealCard({ recipe, i }) {\n  return (\n    <div className=\"meal-card\" data-testid={ `${i}-recipe-card` }>\n      <Link to={ `/comidas/${recipe.idMeal}` }>\n        <img\n          src={ recipe.strMealThumb }\n          alt={ recipe.strMeal }\n          data-testid={ `${i}-card-img` }\n        />\n        <p data-testid={ `${i}-card-name` }>{ recipe.strMeal }</p>\n      </Link>\n    </div>\n  );\n}\n\nMealCard.propTypes = {\n  recipe: PropTypes.shape({\n    strMeal: PropTypes.string,\n    strMealThumb: PropTypes.string,\n    idMeal: PropTypes.string,\n  }).isRequired,\n  i: PropTypes.number.isRequired,\n};\n","const food = '/comidas';\nconst drink = '/bebidas';\nconst error = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\n\nfunction checkResponseMeal(data, callback) {\n  const response = data.meals;\n  if (response === null) {\n    return alert(error);\n  }\n  callback(data);\n}\n\nexport function getRecipesFromMealAPI(url, callback) {\n  fetch(url)\n    .then((response) => response.json())\n    .then((data) => checkResponseMeal(data, callback));\n}\n\nfunction checkResponseCockTail(data, callback) {\n  const response = data.drinks;\n  if (response === null) {\n    return alert(error);\n  }\n  callback(data);\n}\n\nexport function getRecipesFromCocktailAPI(url, callback) {\n  fetch(url)\n    .then((response) => response.json())\n    .then((data) => checkResponseCockTail(data, callback));\n}\n\nfunction getRecipesFromTheMealAPI(term, type, callback) {\n  const API_THEMEALDB_INGREDIENT = 'https://www.themealdb.com/api/json/v1/1/filter.php?i=';\n  const API_THEMEALDB_NAME = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  const API_THEMEALDB_FIRST_LETTER = 'https://www.themealdb.com/api/json/v1/1/search.php?f=';\n  const termSearch = `${term}`;\n  let url = '';\n  switch (type) {\n  case 'i':\n    url = API_THEMEALDB_INGREDIENT + termSearch;\n    getRecipesFromMealAPI(url, callback);\n    break;\n  case 's':\n    url = API_THEMEALDB_NAME + termSearch;\n    getRecipesFromMealAPI(url, callback);\n    break;\n  case 'f':\n    url = API_THEMEALDB_FIRST_LETTER + termSearch;\n    getRecipesFromMealAPI(url, callback);\n    break;\n  default:\n    break;\n  }\n}\n\nfunction getRecipesfromTheCockTailAPI(term, type, callback) {\n  const API_THECOCKTAILDB_INGREDIENT = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=';\n  const API_THECOCKTAILDB_NAME = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  const API_THECOCKTAILDB__FIRST_LETTER = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?f=';\n  const termSearch = `${term}`;\n  let url = '';\n  switch (type) {\n  case 'i':\n    url = API_THECOCKTAILDB_INGREDIENT + termSearch;\n    getRecipesFromCocktailAPI(url, callback);\n    break;\n  case 's':\n    url = API_THECOCKTAILDB_NAME + termSearch;\n    getRecipesFromCocktailAPI(url, callback);\n    break;\n  case 'f':\n    url = API_THECOCKTAILDB__FIRST_LETTER + termSearch;\n    getRecipesFromCocktailAPI(url, callback);\n    break;\n  default:\n    break;\n  }\n}\n\nexport default function getRecipes(term, type, path, callback) {\n  if (path === food) {\n    getRecipesFromTheMealAPI(term, type, callback);\n  } else if (path === drink) {\n    getRecipesfromTheCockTailAPI(term, type, callback);\n  }\n}\n\nexport function getDetailsRecipesFromTheMealAPI(id) {\n  const API_THEMEALDB_DETAILS = 'www.themealdb.com/api/json/v1/1/lookup.php?i=';\n  const urlDetailMeal = API_THEMEALDB_DETAILS + id;\n  getRecipesFromMealAPI(urlDetailMeal);\n}\n\nexport function getDetailsRecipesFromTheCockTailAPI(id) {\n  const API_THECOCKTAILDB_DETAILS = 'www.thecocktaildb.com/api/json/v1/1/lookup.php?i=';\n  const urlDetailCockTail = API_THECOCKTAILDB_DETAILS + id;\n  getRecipesFromCocktailAPI(urlDetailCockTail);\n}\n\nexport function getCategoriesFromApi(path, callback) {\n  const API_THEMEALDB_CATEGORIES = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n  const API_THECOCKTAILDB_CATEGORIES = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n  if (path === food) {\n    fetch(API_THEMEALDB_CATEGORIES)\n      .then((response) => response.json())\n      .then((data) => callback(data.meals));\n  } else if (path === drink) {\n    fetch(API_THECOCKTAILDB_CATEGORIES)\n      .then((response) => response.json())\n      .then((data) => callback(data.drinks));\n  }\n}\n\nexport function getRecipiesByCategories(category, path, callback) {\n  const API_MEAL_RECIPIES_CAT = 'https://www.themealdb.com/api/json/v1/1/filter.php?c=';\n  const API_COCKTAIL_RECIPIES_CAT = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=';\n  let url;\n  console.log(category);\n  if (path === food) {\n    url = API_MEAL_RECIPIES_CAT + category;\n    getRecipesFromMealAPI(url, callback);\n  } else if (path === drink) {\n    url = API_COCKTAIL_RECIPIES_CAT + category;\n    getRecipesFromCocktailAPI(url, callback);\n  }\n}\n\nexport const fetchAPI = async (URL) => {\n  const API = await fetch(URL);\n  const data = await API.json();\n  return data;\n};\n","import React, { useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport getRecipes from '../services/API';\nimport '../styles/SearchBar.css';\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nexport default function SearchBar() {\n  const {\n    changeHaveRecipes,\n    saveMealRecipes,\n    saveDrinkRecipes,\n    setIsFilterByCategory,\n  } = useContext(RecipesAppContext);\n\n  const [textInputValue, setTextInputValue] = useState('');\n  const [radioInputValue, setRadioInputValue] = useState('');\n  const location = useLocation();\n\n  function handlerInputText({ target }) {\n    const { value } = target;\n    setTextInputValue(value);\n    setIsFilterByCategory(false);\n  }\n\n  function handlerInputRadio({ target }) {\n    const { value } = target;\n    setRadioInputValue(value);\n    setIsFilterByCategory(false);\n  }\n\n  function updateDataToSearch() {\n    setIsFilterByCategory(false);\n    if (radioInputValue === 'f' && textInputValue.length > 1) {\n      return alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n\n    changeHaveRecipes(false);\n    const path = location.pathname;\n    let callback;\n    if (path === '/comidas') {\n      callback = saveMealRecipes;\n    } else {\n      callback = saveDrinkRecipes;\n    }\n    getRecipes(textInputValue, radioInputValue, path, callback);\n  }\n\n  return (\n    <section className=\"recipes-filter-section\">\n      <nav className=\"search-bar-nav\">\n        <input\n          className=\"input-text-search-bar\"\n          type=\"text\"\n          data-testid=\"search-input\"\n          onChange={ (e) => handlerInputText(e) }\n        />\n        <div className=\"search-radio-div\">\n          <label className=\"search-radio\" htmlFor=\"ingredient-search-radio\">\n            Ingrediente\n            <input\n              type=\"radio\"\n              className=\"search-radio\"\n              name=\"search-radio\"\n              data-testid=\"ingredient-search-radio\"\n              id=\"ingredient-search-radio\"\n              onClick={ (e) => handlerInputRadio(e) }\n              value=\"i\"\n            />\n          </label>\n          <label className=\"search-radio\" htmlFor=\"name-search-radio\">\n            Nome\n            <input\n              type=\"radio\"\n              className=\"search-radio\"\n              name=\"search-radio\"\n              data-testid=\"name-search-radio\"\n              id=\"name-search-radio\"\n              onClick={ (e) => handlerInputRadio(e) }\n              value=\"s\"\n            />\n          </label>\n          <label className=\"search-radio\" htmlFor=\"first-letter-search-radio\">\n            1° letra\n            <input\n              type=\"radio\"\n              name=\"search-radio\"\n              data-testid=\"first-letter-search-radio\"\n              id=\"first-letter-search-radio\"\n              onClick={ (e) => handlerInputRadio(e) }\n              value=\"f\"\n            />\n          </label>\n        </div>\n        <button\n          className=\"btn-search\"\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          onClick={ () => updateDataToSearch() }\n        >\n          Buscar\n        </button>\n      </nav>\n    </section>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport RecipesAppContext from '../context/RecipesAppContext';\nimport * as api from '../services/API';\nimport '../styles/Categories.css';\n\nexport default function Categories() {\n  const {\n    categories,\n    setIsFilterByCategory,\n    saveMealRecipes,\n    saveDrinkRecipes,\n  } = useContext(RecipesAppContext);\n\n  const [categoryClicked, setCategoryClicked] = useState(false);\n\n  const limit = 5;\n  const firstFiveCategories = categories.filter((item, index) => index < limit);\n  const location = useLocation();\n\n  function filterRecipiesByCategory({ target }) {\n    setIsFilterByCategory(true);\n    const { value } = target;\n    const path = location.pathname;\n    let callback;\n    if (categoryClicked === value && path === '/comidas') {\n      setCategoryClicked('');\n      api.getRecipesFromMealAPI('https://www.themealdb.com/api/json/v1/1/search.php?s=', saveMealRecipes);\n    } else if (categoryClicked === value && path === '/bebidas') {\n      setCategoryClicked('');\n      api.getRecipesFromCocktailAPI('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=', saveDrinkRecipes);\n    } else {\n      setCategoryClicked(value);\n      if (path === '/comidas') {\n        callback = saveMealRecipes;\n      } else {\n        callback = saveDrinkRecipes;\n      }\n      api.getRecipiesByCategories(value, path, callback);\n    }\n  }\n\n  return (\n    <section className=\"categories-section\">\n      <button\n        type=\"button\"\n        value={ categoryClicked }\n        onClick={ (e) => filterRecipiesByCategory(e) }\n        data-testid=\"All-category-filter\"\n      >\n        ALL\n      </button>\n      { firstFiveCategories.map((category, index) => (\n        <button\n          type=\"button\"\n          key={ index }\n          value={ category.strCategory }\n          onClick={ (e) => filterRecipiesByCategory(e) }\n          data-testid={ `${category.strCategory}-category-filter` }\n        >\n          { category.strCategory }\n        </button>\n      ))}\n    </section>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport searchIcon from '../images/searchIcon.svg';\n\nexport default function ButtonSearchTop({ openSearchBar }) {\n  const { setIsSearch, isSearch } = openSearchBar;\n  return (\n    <div>\n      <button type=\"button\" onClick={ () => setIsSearch(!isSearch) }>\n        <img\n          src={ searchIcon }\n          alt=\"search\"\n          data-testid=\"search-top-btn\"\n        />\n      </button>\n    </div>\n  );\n}\n\nButtonSearchTop.propTypes = {\n  openSearchBar: PropTypes.shape({\n    isSearch: PropTypes.bool,\n    setIsSearch: PropTypes.func,\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\nimport SearchBar from './SearchBar';\nimport Categories from './Categories';\nimport ButtonSearchTop from './ButtonSearchTop';\nimport '../styles/Header.css';\n\nfunction Header() {\n  const [isSearch, setIsSearch] = useState(false);\n  const location = useLocation();\n\n  function getPageTitle() {\n    const path = location.pathname;\n    const area = '/explorar/comidas/area';\n    const receitasFeitas = '/receitas-feitas';\n    const receitasFavoritas = '/receitas-favoritas';\n    let pageTitle = '';\n    if (path === receitasFeitas) {\n      pageTitle = 'Receitas Feitas';\n    } else if (path === receitasFavoritas) {\n      pageTitle = 'Receitas Favoritas';\n    } else if (path.split('/').length === 2 && path !== receitasFeitas) {\n      const title = `${path.split('/')[1]} `;\n      pageTitle = title.charAt(0).toUpperCase() + title.slice(1);\n    } else if (path === area) {\n      pageTitle = 'Explorar Origem';\n    } else if (path !== area || path !== receitasFeitas) {\n      const end = path.split('/').length - 1;\n      const pageTitle1 = `${path.split('/')[1]}`;\n      const title1 = pageTitle1.charAt(0).toUpperCase() + pageTitle1.slice(1);\n      const pageTitle2 = `${path.split('/')[end]}`;\n      const title2 = pageTitle2.charAt(0).toUpperCase() + pageTitle2.slice(1);\n      pageTitle = `${title1} ${title2}`;\n    }\n    return pageTitle;\n  }\n\n  const searchButtonElements = {\n    setIsSearch,\n    isSearch,\n  };\n\n  function classNameButtonSearch() {\n    if (\n      location.pathname === '/comidas'\n      || location.pathname === '/bebidas'\n      || location.pathname === '/explorar/area'\n      || location.pathname === '/explorar/comidas/area'\n    ) {\n      return 'visible';\n    }\n    return 'hidden';\n  }\n\n  return (\n    <header className=\"header-section-top\">\n      <div className=\"header-section\">\n        <Link to=\"/perfil\">\n          <img\n            src={ profileIcon }\n            alt=\"user\"\n            data-testid=\"profile-top-btn\"\n          />\n        </Link>\n        <h3 data-testid=\"page-title\">{ getPageTitle() }</h3>\n        {/* { location.pathname === '/comidas'\n          && <ButtonSearchTop openSearchBar={ searchButtonElements } />}\n        { location.pathname === '/bebidas'\n          && <ButtonSearchTop openSearchBar={ searchButtonElements } />}\n        { location.pathname === '/explorar/area'\n          && <ButtonSearchTop openSearchBar={ searchButtonElements } />}\n        { location.pathname === '/explorar/comidas/area'\n          && <ButtonSearchTop openSearchBar={ searchButtonElements } />} */}\n        <nav className={ classNameButtonSearch() }>\n          <ButtonSearchTop openSearchBar={ searchButtonElements } />\n        </nav>\n      </div>\n      { isSearch && <SearchBar /> }\n      { location.pathname === '/comidas' && <Categories /> }\n      { location.pathname === '/bebidas' && <Categories /> }\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drink from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\nimport '../styles/MenuInferior.css';\n\nexport default function MenuInferior() {\n  return (\n    <div className=\"menu-bottom\">\n      <footer className=\"menu-bottom-imagens\" data-testid=\"footer\">\n        <Link to=\"/bebidas\">\n          <img data-testid=\"drinks-bottom-btn\" src={ drink } alt=\"Drink Icon\" />\n        </Link>\n        <Link to=\"/explorar\">\n          <img data-testid=\"explore-bottom-btn\" src={ exploreIcon } alt=\"Drink Icon\" />\n        </Link>\n        <Link to=\"/comidas\">\n          <img data-testid=\"food-bottom-btn\" src={ mealIcon } alt=\"Drink Icon\" />\n        </Link>\n      </footer>\n    </div>\n  );\n}\n","import React from 'react';\nimport panela from '../images/panela.gif';\nimport '../styles/LoadingMeal.css';\n\nexport default function LoadingMeal() {\n  return (\n    <div className=\"loading-meal\">\n      <img src={ panela } alt=\"gif\" />\n    </div>\n  );\n}\n","import React from 'react';\nimport '../styles/LoadingDrink.css';\nimport bebida from '../images/bebida.gif';\n\nexport default function LoadingDrink() {\n  return (\n    <div className=\"loading-drink\">\n      <img src={ bebida } alt=\"gif\" />\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport DrinkCard from './DrinkCard';\nimport MealCard from './MealCard';\nimport Header from './Header';\nimport RecipesAppContext from '../context/RecipesAppContext';\nimport MenuInferior from './MenuInferior';\nimport LoadingMeal from './LoadingMeal';\nimport '../styles/Cards.css';\nimport LoadingDrink from './LoadingDrink';\n\nexport default function Cards() {\n  const { haveRecipes, mealRecipes, drinkRecipes } = useContext(RecipesAppContext);\n  const location = useLocation();\n  const limit = 12;\n\n  function renderRecipes() {\n    if (haveRecipes && location.pathname === '/comidas') {\n      const recipes = mealRecipes.filter((recipe, index) => index < limit);\n      return (\n        <div className=\"cards\">\n          {recipes.map((recipe, index) => (\n            <MealCard key={ index } recipe={ recipe } i={ index } />))}\n        </div>\n      );\n    }\n    if (haveRecipes && location.pathname === '/bebidas') {\n      const recipes = drinkRecipes.filter((recipe, index) => index < limit);\n      return (\n        <div className=\"cards\">\n          {recipes.map((recipe, index) => (\n            <DrinkCard key={ index } recipe={ recipe } i={ index } />))}\n        </div>\n      );\n    }\n  }\n\n  function renderLoading() {\n    if (location.pathname === '/comidas') return <LoadingMeal />;\n    if (location.pathname === '/bebidas') return <LoadingDrink />;\n  }\n\n  return (\n    <div className=\"cards-section\">\n      <Header />\n      { haveRecipes\n        ? renderRecipes()\n        : renderLoading() }\n      <MenuInferior />\n    </div>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport RecipesAppContext from '../context/RecipesAppContext';\nimport Cards from '../components/Cards';\nimport getRecipes, { getCategoriesFromApi } from '../services/API';\nimport '../styles/Recipes.css';\n\nexport default function Recipes() {\n  const {\n    mealRecipes,\n    drinkRecipes,\n    haveRecipes,\n    isFilterByCategory,\n    changeHaveRecipes,\n    saveDrinkRecipes,\n    saveMealRecipes,\n    saveCategories,\n  } = useContext(RecipesAppContext);\n  const location = useLocation();\n  const history = useHistory();\n\n  function checkOneRecipe() {\n    if (isFilterByCategory === false) {\n      if (mealRecipes.length === 1 && location.pathname === '/comidas') {\n        const id = mealRecipes[0].idMeal;\n        const path = `/comidas/${id}`;\n        history.push(path);\n      } else if (drinkRecipes.length === 1 && location.pathname === '/bebidas') {\n        const id = drinkRecipes[0].idDrink;\n        const path = `/bebidas/${id}`;\n        history.push(path);\n      }\n    }\n  }\n  useEffect(checkOneRecipe, [\n    isFilterByCategory,\n    mealRecipes,\n    drinkRecipes,\n    history,\n    location,\n  ]);\n\n  function getCategories() {\n    // const path = location.pathname;\n    getCategoriesFromApi(location.pathname, saveCategories);\n  }\n  useEffect(getCategories, [location]);\n\n  function GetRecipesFirstAccess() {\n    if (location.pathname === '/bebidas' && drinkRecipes.length === 0) {\n      changeHaveRecipes(false);\n      getRecipes('', 's', location.pathname, saveDrinkRecipes);\n    } else if (location.pathname === '/comidas' && mealRecipes.length === 0) {\n      changeHaveRecipes(false);\n      getRecipes('', 's', location.pathname, saveMealRecipes);\n    }\n  }\n  useEffect(GetRecipesFirstAccess,\n    [\n      location, saveDrinkRecipes, drinkRecipes, saveMealRecipes, mealRecipes, haveRecipes, changeHaveRecipes,\n    ]);\n\n  return (\n    <div className=\"recipes-section\">\n      <Cards />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nexport default function DetailsMealsComp({ propsDrink }) {\n  const {\n    recipesDetails,\n    handleClickCopy,\n    handleClickFavorites,\n    favorite,\n    copyText,\n    getIngredients,\n    recipesRecommendation,\n    buttonHiddenClass,\n    inProgress,\n    handleClickRecipesProgress,\n  } = propsDrink;\n\n  function embedVideo() {\n    const id = `${recipesDetails.strYoutube}`;\n    const array = id.split('=');\n    return `https://www.youtube.com/embed/${array[1]}`;\n  }\n\n  return (\n    <div className=\"container-details-food\">\n      <img\n        className=\"recipes-img\"\n        data-testid=\"recipe-photo\"\n        alt=\"recipes-food\"\n        src={ recipesDetails.strMealThumb }\n      />\n      <div data-testid=\"recipe-title\" className=\"title-section\">\n        <div className=\"buttons-favorites-section-details\">\n          <button\n            data-testid=\"share-btn\"\n            className=\"buttons-share-favorite-details\"\n            type=\"button\"\n            onClick={ handleClickCopy }\n          >\n            <img src={ shareIcon } alt=\"share\" />\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttons-heart-favorite-details\"\n            onClick={ handleClickFavorites }\n          >\n            <img\n              src={ favorite ? blackHeartIcon : whiteHeartIcon }\n              data-testid=\"favorite-btn\"\n              alt=\"favorite\"\n            />\n          </button>\n        </div>\n        <h2>{ recipesDetails.strMeal }</h2>\n      </div>\n      <p>{ copyText }</p>\n      <p data-testid=\"recipe-category\">{ recipesDetails.strCategory }</p>\n      <div className=\"ingredients-section-details\">\n        <h4>Ingredients</h4>\n        <div className=\"ingredient-list-section-details\">\n          {getIngredients(recipesDetails)}\n        </div>\n      </div>\n      <div className=\"instrucitons-section-details\">\n        <h4>Instructions</h4>\n        <p data-testid=\"instructions\">{ recipesDetails.strInstructions }</p>\n      </div>\n      <iframe\n        title={ recipesDetails.strMeal }\n        className=\"video\"\n        data-testid=\"video\"\n        src={ embedVideo() }\n        frameBorder=\"0\"\n      />\n      <div>\n        <h4 className=\"title-recomend\">Recomendadas</h4>\n        <section className=\"recomend-container\">\n          {\n            recipesRecommendation && recipesRecommendation.length && recipesRecommendation\n              .filter((_, indexFilter) => indexFilter < '6')\n              .map((drinks, index) => (\n                <div\n                  className=\"recomendation-card\"\n                  data-testid={ `${index}-recomendation-card` }\n                  key={ index }\n                >\n                  <p>{drinks.strAlcoholic}</p>\n                  <h4\n                    data-testid={ `${index}-recomendation-title` }\n                  >\n                    {drinks.strDrink}\n                  </h4>\n                  <Link\n                    to={ `/bebidas/${drinks.idDrink}` }\n                  >\n                    <img\n                      className=\"recomend-img\"\n                      data-testid={ `${index}-card-img` }\n                      src={ drinks.strDrinkThumb }\n                      alt={ drinks.strDrink }\n                    />\n                  </Link>\n                </div>\n              ))\n          }\n        </section>\n      </div>\n      <div className=\"button-progress-section-details\">\n        <button\n          className={ buttonHiddenClass }\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n          onClick={ () => handleClickRecipesProgress() }\n        >\n          { inProgress ? 'Continuar Receita' : 'Iniciar Receita' }\n        </button>\n      </div>\n    </div>\n  );\n}\n\nDetailsMealsComp.propTypes = {\n  propsDrink: PropTypes.shape({\n    recipesDetails: PropTypes.objectOf(PropTypes.string),\n    handleClickCopy: PropTypes.func,\n    handleClickFavorites: PropTypes.func,\n    favorite: PropTypes.bool,\n    copyText: PropTypes.string,\n    getIngredients: PropTypes.func,\n    handleClickRecipesProgress: PropTypes.func,\n    recipesRecommendation: PropTypes.arrayOf(PropTypes.object),\n    setRecipeId: PropTypes.func,\n    buttonHiddenClass: PropTypes.string,\n    inProgress: PropTypes.bool,\n    setDrinkRecipeId: PropTypes.string,\n    recipesSelectedId: PropTypes.string,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport copy from 'clipboard-copy';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/DetailsRecipe.css';\nimport * as api from '../services/API';\nimport DetailsMealsComp from '../components/DetailsMealsComp';\n\nexport default function DetailsMeals() {\n  const [recipesDetails, setRecipesDetails] = useState({});\n  const [setDrinkRecipeId] = useState('');\n  const [copyText, setCopyText] = useState('');\n  const [buttonHiddenClass, setButtonHiddenClass] = useState('hiddenButton');\n  const [favorite, setFavorite] = useState(false);\n  const [recipesRecommendation, setRecipesRecommendation] = useState({});\n  const [inProgress, setInProgress] = useState(false);\n\n  const history = useHistory();\n  const { pathname } = history.location;\n  const recipesSelectedId = pathname.split('/')[2];\n\n  useEffect(() => {\n    const getApiDetailsRecipesFood = async () => {\n      const URL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${recipesSelectedId}`;\n      const requestFood = await api.fetchAPI(URL);\n      const responseFood = await requestFood.meals;\n      setRecipesDetails(responseFood[0]);\n    };\n    getApiDetailsRecipesFood();\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes')) || {};\n    setInProgress(JSON.stringify(recipesInProgress).includes(recipesSelectedId));\n  }, [setRecipesDetails, recipesSelectedId]);\n\n  const getNull = (measure) => {\n    if (measure === null) {\n      return '';\n    }\n    return `- ${measure}`;\n  };\n\n  const getIngredients = (recipe) => {\n    const ingredients = Object.entries(recipe)\n      .filter((key) => (key[1] === null ? false : key[0].includes('strIngredient')));\n    const measures = Object.entries(recipe)\n      .filter((key) => (key[0].includes('strMeasure')));\n\n    return ingredients.filter((recipes) => recipes[1] !== '')\n      .map((ingredient, index) => (\n        <li key={ index } data-testid={ `${index}-ingredient-name-and-measure` }>\n          { `${ingredient[1]} ${getNull(measures[index][1])}` }\n        </li>\n      ));\n  };\n\n  useEffect(() => {\n    const recommendationFetch = async () => {\n      const URL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n      const requestDrink = await api.fetchAPI(URL);\n      const responseDrink = await requestDrink.drinks;\n      setRecipesRecommendation(responseDrink);\n    };\n    recommendationFetch();\n  }, []);\n\n  useEffect(() => {\n    if (!localStorage.doneRecipes) localStorage.doneRecipes = JSON.stringify([]);\n    const doneRecipesLCstorage = JSON.parse(localStorage.doneRecipes)\n      .filter((item) => item.id === recipesSelectedId);\n    if (doneRecipesLCstorage.length > 0) {\n      setButtonHiddenClass('hiddenButton-hidden');\n    } else {\n      setButtonHiddenClass('hiddenButton');\n    }\n  }, [recipesSelectedId]);\n\n  const handleClickCopy = () => {\n    copy(window.location.href);\n    setCopyText('Link copiado!');\n    setInterval(() => setCopyText(''), '2000');\n    console.log(window.location.href);\n  };\n\n  useEffect(() => {\n    const retriveFavoties = () => {\n      const atualStorage = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n      return setFavorite(atualStorage.some((item) => item.id === recipesSelectedId));\n    };\n    retriveFavoties();\n  }, [recipesSelectedId]);\n\n  const handleClickRecipesProgress = () => {\n    history.push(`/comidas/${recipesSelectedId}/in-progress`);\n  };\n\n  const handleClickFavorites = () => {\n    const favoriteObj = [\n      {\n        id: recipesDetails.idMeal,\n        type: 'comida',\n        area: recipesDetails.strArea,\n        category: recipesDetails.strCategory,\n        alcoholicOrNot: '',\n        name: recipesDetails.strMeal,\n        image: recipesDetails.strMealThumb,\n      },\n    ];\n    const storageFavorite = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    if (favorite) {\n      setFavorite(false);\n      const rmvFavorite = storageFavorite.filter((item) => item.id !== recipesSelectedId);\n      const rmvFavoriteStringfy = JSON.stringify(rmvFavorite);\n      localStorage.setItem('favoriteRecipes', rmvFavoriteStringfy);\n    } else {\n      setFavorite(true);\n      const newRecipeStringfy = JSON.stringify([\n        ...favoriteObj,\n        ...storageFavorite,\n      ]);\n      localStorage.setItem('favoriteRecipes', newRecipeStringfy);\n    }\n  };\n\n  const propsDrink = {\n    recipesDetails,\n    handleClickCopy,\n    handleClickFavorites,\n    favorite,\n    copyText,\n    getIngredients,\n    recipesRecommendation,\n    recipesSelectedId,\n    buttonHiddenClass,\n    inProgress,\n    setDrinkRecipeId,\n    handleClickRecipesProgress,\n  };\n\n  return (\n    <div className=\"recipe-container\">\n      <DetailsMealsComp propsDrink={ propsDrink } />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nexport default function DetailsDrinkComp({ propsDrink }) {\n  const {\n    recipesDetails,\n    handleClickCopy,\n    handleClickFavorites,\n    favorite,\n    copyText,\n    getIngredients,\n    recipesRecommendation,\n    buttonHiddenClass,\n    inProgress,\n    handleClickRecipesProgress,\n  } = propsDrink;\n\n  return (\n    <div className=\"container-details-food\">\n      <img\n        className=\"recipes-img\"\n        data-testid=\"recipe-photo\"\n        alt=\"recipes-food\"\n        src={ recipesDetails.strDrinkThumb }\n      />\n      <div data-testid=\"recipe-title\" className=\"title-section\">\n        <div className=\"buttons-favorites-section-details\">\n          <button\n            data-testid=\"share-btn\"\n            className=\"buttons-share-favorite\"\n            type=\"button\"\n            onClick={ handleClickCopy }\n          >\n            <img src={ shareIcon } alt=\"share\" />\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttons-heart-favorite\"\n            onClick={ handleClickFavorites }\n          >\n            <img\n              src={ favorite ? blackHeartIcon : whiteHeartIcon }\n              data-testid=\"favorite-btn\"\n              alt=\"favorite\"\n            />\n          </button>\n        </div>\n        <h2>{ recipesDetails.strDrink }</h2>\n      </div>\n      <p>{copyText}</p>\n      <p data-testid=\"recipe-category\">{ recipesDetails.strAlcoholic }</p>\n      <div className=\"ingredients-section-details\">\n        <h4>Ingredients</h4>\n        <div>\n          { getIngredients(recipesDetails) }\n        </div>\n      </div>\n      <div className=\"instrucitons-section-details\">\n        <h4>Instructions</h4>\n        <p data-testid=\"instructions\">{ recipesDetails.strInstructions }</p>\n      </div>\n      <div>\n        <h4 className=\"title-recomend\">Recomendadas</h4>\n      </div>\n      <section className=\"recomend-container\">\n        {\n          recipesRecommendation && recipesRecommendation.length && recipesRecommendation\n            .filter((_, indexFilter) => indexFilter < '6')\n            .map((meals, index) => (\n              <div\n                className=\"recomendation-card\"\n                data-testid={ `${index}-recomendation-card` }\n                key={ index }\n              >\n                <h4\n                  data-testid={ `${index}-recomendation-title` }\n                >\n                  { meals.strMeal }\n                </h4>\n                <Link\n                  // onClick={ () => setRecipeId(meals.idMeal) }\n                  to={ `/comidas/${meals.idMeal}` }\n                >\n                  <img\n                    className=\"recomend-img\"\n                    data-testid={ `${index}-card-img` }\n                    src={ meals.strMealThumb }\n                    alt={ meals.strMeal }\n                  />\n                </Link>\n              </div>\n            ))\n        }\n      </section>\n      <div className=\"button-progress-section-details\">\n        <button\n          className={ buttonHiddenClass }\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n          onClick={ () => handleClickRecipesProgress() }\n        >\n          { inProgress ? 'Continuar Receita' : 'Iniciar Receita' }\n        </button>\n      </div>\n    </div>\n  );\n}\n\nDetailsDrinkComp.propTypes = {\n  propsDrink: PropTypes.shape({\n    recipesDetails: PropTypes.objectOf(PropTypes.string),\n    handleClickCopy: PropTypes.func,\n    handleClickFavorites: PropTypes.func,\n    favorite: PropTypes.bool,\n    copyText: PropTypes.string,\n    getIngredients: PropTypes.func,\n    recipesRecommendation: PropTypes.arrayOf(PropTypes.object),\n    setRecipeId: PropTypes.func,\n    buttonHiddenClass: PropTypes.string,\n    inProgress: PropTypes.bool,\n    recipesDrinkSelectedId: PropTypes.string,\n    handleClickRecipesProgress: PropTypes.func,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport copy from 'clipboard-copy';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/DetailsRecipe.css';\nimport * as api from '../services/API';\nimport DetailsDrinkComp from '../components/DetailsDrinkComp';\n\nexport default function DetailsDrink() {\n  const [recipesDetails, setRecipesDetails] = useState({});\n  const [setDrinkRecipeId] = useState('');\n  const [copyText, setCopyText] = useState('');\n  const [buttonHiddenClass, setButtonHiddenClass] = useState('hiddenButton');\n  const [favorite, setFavorite] = useState(false);\n  const [recipesRecommendation, setRecipesRecommendation] = useState({});\n  const [inProgress, setInProgress] = useState(false);\n\n  const history = useHistory();\n  const { pathname } = history.location;\n  const recipesSelectedId = pathname.split('/')[2];\n\n  useEffect(() => {\n    const getApiDetailsRecipesDrink = async () => {\n      const URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${recipesSelectedId}`;\n      const requestDrink = await api.fetchAPI(URL);\n      const responseDrink = await requestDrink.drinks;\n      setRecipesDetails(responseDrink[0]);\n    };\n    getApiDetailsRecipesDrink();\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes')) || {};\n    setInProgress(JSON.stringify(recipesInProgress).includes(recipesSelectedId));\n  }, [setRecipesDetails, recipesSelectedId]);\n\n  const getNull = (measure) => {\n    if (measure === null) {\n      return '';\n    }\n    return `- ${measure}`;\n  };\n\n  const getIngredients = (recipe) => {\n    const ingredients = Object.entries(recipe)\n      .filter((key) => (key[1] === null ? false : key[0].includes('strIngredient')));\n    const measures = Object.entries(recipe)\n      .filter((key) => (key[0].includes('strMeasure')));\n\n    return ingredients.filter((recipes) => recipes[1] !== '')\n      .map((ingredient, index) => (\n        <li key={ index } data-testid={ `${index}-ingredient-name-and-measure` }>\n          { `${ingredient[1]} ${getNull(measures[index][1])}` }\n        </li>\n      ));\n  };\n\n  useEffect(() => {\n    const recommendationFetch = async () => {\n      const requestFood = await api.fetchAPI('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const responseFood = await requestFood.meals;\n      setRecipesRecommendation(responseFood);\n    };\n    recommendationFetch();\n  }, []);\n\n  useEffect(() => {\n    if (!localStorage.doneRecipes) localStorage.doneRecipes = JSON.stringify([]);\n    const doneRecipesLCstorage = JSON.parse(localStorage.doneRecipes)\n      .filter((item) => item.id === recipesSelectedId);\n    if (doneRecipesLCstorage.length > 0) {\n      setButtonHiddenClass('hiddenButton-hidden');\n    } else {\n      setButtonHiddenClass('hiddenButton');\n    }\n  }, [recipesSelectedId]);\n\n  const handleClickCopy = () => {\n    copy(window.location.href);\n    setCopyText('Link copiado!');\n    setInterval(() => setCopyText(''), '2000');\n    console.log(window.location.href);\n  };\n\n  useEffect(() => {\n    const retriveFavoties = () => {\n      const atualStorage = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n      return setFavorite(atualStorage.some((item) => item.id === recipesSelectedId));\n    };\n    retriveFavoties();\n  }, [recipesSelectedId]);\n\n  const handleClickRecipesProgress = () => {\n    history.push(`/bebidas/${recipesSelectedId}/in-progress`);\n  };\n\n  const handleClickFavorites = () => {\n    const favoriteObj = [\n      {\n        id: recipesDetails.idDrink,\n        type: 'bebida',\n        area: '',\n        category: recipesDetails.strCategory,\n        alcoholicOrNot: recipesDetails.strAlcoholic,\n        name: recipesDetails.strDrink,\n        image: recipesDetails.strDrinkThumb,\n      },\n    ];\n    const storageFavorite = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    if (favorite) {\n      const rmvFavorite = storageFavorite.filter((item) => item.id !== recipesSelectedId);\n      const rmvFavoriteStringfy = JSON.stringify(rmvFavorite);\n      setFavorite(false);\n      localStorage.setItem('favoriteRecipes', rmvFavoriteStringfy);\n    } else {\n      setFavorite(true);\n      const newRecipeStringfy = JSON.stringify([\n        ...favoriteObj,\n        ...storageFavorite,\n      ]);\n      localStorage.setItem('favoriteRecipes', newRecipeStringfy);\n    }\n  };\n\n  const propsDrink = {\n    recipesDetails,\n    handleClickCopy,\n    handleClickFavorites,\n    favorite,\n    copyText,\n    getIngredients,\n    recipesRecommendation,\n    recipesSelectedId,\n    buttonHiddenClass,\n    inProgress,\n    setDrinkRecipeId,\n    handleClickRecipesProgress,\n  };\n\n  return (\n    <div className=\"recipe-container\">\n      <DetailsDrinkComp propsDrink={ propsDrink } />\n    </div>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport MenuInferior from './MenuInferior';\nimport '../styles/Perfil.css';\n\nfunction Perfil() {\n  const emailUser = localStorage.getItem('user');\n  const history = useHistory();\n\n  const logout = () => {\n    localStorage.clear();\n    history.push('/');\n  };\n\n  return (\n    <div className=\"perfil-section\">\n      <Header />\n      <h2 data-testid=\"page-title\">Perfil</h2>\n      <span data-testid=\"profile-email\">{emailUser}</span>\n      <button\n        className=\"perfil\"\n        type=\"button\"\n        data-testid=\"profile-done-btn\"\n        onClick={ () => history.push('/receitas-feitas') }\n      >\n        <h3>Receitas Feitas</h3>\n      </button>\n      <button\n        className=\"perfil\"\n        type=\"button\"\n        data-testid=\"profile-favorite-btn\"\n        onClick={ () => history.push('/receitas-favoritas') }\n      >\n        <h3>Receitas Favoritas</h3>\n      </button>\n      <button\n        className=\"perfil\"\n        type=\"button\"\n        data-testid=\"profile-logout-btn\"\n        onClick={ logout }\n      >\n        <h3>Sair</h3>\n      </button>\n      <MenuInferior />\n    </div>\n  );\n}\n\nexport default Perfil;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport '../styles/ExploreFoodAndDrink.css';\n\nexport default function ExploreFoodAndDrink() {\n  const location = useLocation().pathname;\n  const history = useHistory();\n\n  function getRamdonRoute() {\n    const URL_MEAL = 'https://www.themealdb.com/api/json/v1/1/random.php';\n    const URL_DRINK = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n    const path = `/${location.split('/')[2]}`;\n    if (path === '/comidas') {\n      fetch(URL_MEAL)\n        .then((response) => response.json())\n        .then((data) => history.push(`${path}/${data.meals[0].idMeal}`));\n    } else if (path === '/bebidas') {\n      fetch(URL_DRINK)\n        .then((response) => response.json())\n        .then((data) => history.push(`${path}/${data.drinks[0].idDrink}`));\n    }\n  }\n  return (\n    <div className=\"explore-buttons\">\n      <button\n        type=\"button\"\n        onClick={ () => history.push(`${location}/ingredientes`) }\n        data-testid=\"explore-by-ingredient\"\n      >\n        <h3>Por Ingredientes</h3>\n      </button>\n      {\n        location === '/explorar/comidas'\n          && (\n            <button\n              type=\"button\"\n              onClick={ () => history.push(`${location}/area`) }\n              data-testid=\"explore-by-area\"\n            >\n              <h3>Por Local de Origem</h3>\n            </button>\n          )\n      }\n      <button\n        type=\"button\"\n        data-testid=\"explore-surprise\"\n        onClick={ () => getRamdonRoute() }\n      >\n        <h3>Me Surpreenda!</h3>\n      </button>\n\n    </div>\n\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/ExploreInitial.css';\n\nexport default function ExploreInitial() {\n  return (\n    <div className=\"explore-section\">\n      <Link to=\"/explorar/comidas\">\n        <h2 data-testid=\"explore-food\">Explorar Comidas</h2>\n      </Link>\n      <Link to=\"/explorar/bebidas\">\n        <h2 data-testid=\"explore-drinks\">Explorar Bebidas</h2>\n      </Link>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from '../context/RecipesAppContext';\nimport '../styles/IngredientMealCard.css';\n\nexport default function IngredientMealCard({ ingredient, i }) {\n  const { saveMealRecipes } = useContext(RecipesAppContext);\n\n  const history = useHistory();\n\n  function getRecipesByIngredient() {\n    const time = 2000;\n    fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingredient.strIngredient}`)\n      .then((response) => response.json())\n      .then((data) => saveMealRecipes(data));\n    setTimeout(() => {\n      history.push('/comidas');\n    }, time);\n  }\n\n  return (\n    <div className=\"ingredient-meal-card\">\n      <button\n        type=\"button\"\n        onClick={ () => getRecipesByIngredient() }\n        data-testid={ `${i}-ingredient-card` }\n      >\n        <img\n          src={ `https://www.themealdb.com/images/ingredients/${ingredient.strIngredient}-Small.png` }\n          alt={ ingredient.strIngredient }\n          data-testid={ `${i}-card-img` }\n        />\n        <p data-testid={ `${i}-card-name` }>{ ingredient.strIngredient }</p>\n      </button>\n    </div>\n  );\n}\n\nIngredientMealCard.propTypes = {\n  ingredient: PropTypes.objectOf(PropTypes.string).isRequired,\n  i: PropTypes.number.isRequired,\n};\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from '../context/RecipesAppContext';\nimport '../styles/IngredientDrinkCard.css';\n\nexport default function IngredientDrinkCard({ ingredient, i }) {\n  const { saveDrinkRecipes } = useContext(RecipesAppContext);\n\n  const history = useHistory();\n\n  function getRecipesByIngredient() {\n    const time = 2000;\n    fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredient.strIngredient1}`)\n      .then((response) => response.json())\n      .then((data) => saveDrinkRecipes(data));\n    setTimeout(() => {\n      history.push('/bebidas');\n    }, time);\n  }\n\n  return (\n    <div className=\"ingredient-drink-card\">\n      <button\n        type=\"button\"\n        onClick={ () => getRecipesByIngredient() }\n        data-testid={ `${i}-ingredient-card` }\n      >\n        <img\n          src={ `https://www.thecocktaildb.com/images/ingredients/${ingredient.strIngredient1}-Small.png` }\n          alt={ ingredient.strIngredient1 }\n          data-testid={ `${i}-card-img` }\n        />\n        <p data-testid={ `${i}-card-name` }>{ ingredient.strIngredient1 }</p>\n      </button>\n    </div>\n  );\n}\n\nIngredientDrinkCard.propTypes = {\n  ingredient: PropTypes.objectOf(PropTypes.string).isRequired,\n  i: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport IngredientMealCard from './IngredientMealCard';\nimport IngredientDrinkCard from './IngredientDrinkCard';\nimport '../styles/ExploreCards.css';\n\nexport default function ExploreCards() {\n  const [ingredients, setIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation().pathname;\n\n  const limit = 12;\n\n  const food = '/explorar/comidas/ingredientes';\n  const drink = '/explorar/bebidas/ingredientes';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const URL_MEAL_INGREDIENTS = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\n    const URL_COCKTAIL_INGREDIENTS = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\n    if (location === food) {\n      fetch(URL_MEAL_INGREDIENTS)\n        .then((response) => response.json())\n        .then((data) => setIngredients(data.meals));\n      setIsLoading(false);\n    } else if (location === drink) {\n      fetch(URL_COCKTAIL_INGREDIENTS)\n        .then((response) => response.json())\n        .then((data) => setIngredients(data.drinks));\n      setIsLoading(false);\n    }\n  }, [location]);\n\n  return (\n    <div className=\"explore-cards-section\">\n      { isLoading && <h3>Loading...</h3>}\n      { !isLoading && location === food\n      && ingredients.filter((ingredient, i) => i < limit)\n        .map((ingredient, i) => (\n          <IngredientMealCard key={ i } ingredient={ ingredient } i={ i } />)) }\n      { !isLoading && location === drink\n        && ingredients.filter((ingredient, i) => i < limit)\n          .map((ingredient, i) => (\n            <IngredientDrinkCard key={ i } ingredient={ ingredient } i={ i } />)) }\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport MealCard from './MealCard';\nimport RecipesAppContext from '../context/RecipesAppContext';\nimport '../styles/ExploreAreaCards.css';\n\nexport default function ExploreAreaCards() {\n  const { mealRecipes } = useContext(RecipesAppContext);\n\n  function renderMealCard() {\n    const limit = 12;\n    return (\n      mealRecipes.filter((recipe, i) => i < limit)\n        .map((recipe, i) => <MealCard key={ i } recipe={ recipe } i={ i } />)\n    );\n  }\n\n  return (\n    <div className=\"explore-area-cards-section\">\n      { renderMealCard() }\n    </div>\n  );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport ExploreAreaCards from './ExploreAreaCards';\nimport RecipesAppContext from '../context/RecipesAppContext';\nimport getRecipes from '../services/API';\nimport '../styles/ExploreArea.css';\nimport LoadingMeal from './LoadingMeal';\n\nexport default function ExploreArea() {\n  const { saveMealRecipes, changeHaveRecipes, haveRecipes } = useContext(RecipesAppContext);\n\n  const [arrayArea, setArrayArea] = useState([]);\n  const [areaSelected, setAreaSelected] = useState('All');\n  // const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list')\n      .then((response) => response.json())\n      .then((data) => setArrayArea(data.meals));\n  }, []);\n\n  function handlerArea({ target }) {\n    const { value } = target;\n    setAreaSelected(value);\n  }\n\n  function renderDropdownArea() {\n    return (\n      <select\n        name=\"dropdown-area\"\n        data-testid=\"explore-by-area-dropdown\"\n        onChange={ (e) => handlerArea(e) }\n      >\n        <option\n          key={ 0 }\n          data-testid=\"All-option\"\n          value=\"All\"\n        >\n          All\n        </option>\n        { arrayArea.map((area, i) => (\n          <option\n            key={ i + 1 }\n            data-testid={ `${area.strArea}-option` }\n            value={ area.strArea }\n          >\n            { area.strArea }\n          </option>\n        )) }\n      </select>\n    );\n  }\n\n  function getRecipesByArea() {\n    if (areaSelected === 'All') {\n      changeHaveRecipes(false);\n      getRecipes('', 's', '/comidas', saveMealRecipes);\n    } else {\n      changeHaveRecipes(false);\n      fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${areaSelected}`)\n        .then((response) => response.json())\n        .then((data) => saveMealRecipes(data));\n    }\n  }\n  useEffect(getRecipesByArea, [areaSelected]);\n\n  return (\n    <div className=\"explore-area-section\">\n      { renderDropdownArea() }\n      { !haveRecipes\n        ? <LoadingMeal />\n        : <ExploreAreaCards /> }\n    </div>\n  );\n}\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\nimport ExploreFoodAndDrink from '../components/ExploreFoodAndDrink';\nimport ExploreInitial from '../components/ExploreInitial';\nimport ExploreCards from '../components/ExploreCards';\nimport ExploreArea from '../components/ExploreArea';\nimport MenuInferior from '../components/MenuInferior';\n\nexport default function Explore() {\n  const location = useLocation().pathname;\n\n  return (\n    <section className=\"explore-section\">\n      <Header />\n      {(location === '/explorar') && <ExploreInitial />}\n      { location === '/explorar/bebidas' && <ExploreFoodAndDrink />}\n      { location === '/explorar/comidas' && <ExploreFoodAndDrink />}\n      { location === '/explorar/comidas/ingredientes' && <ExploreCards />}\n      { location === '/explorar/bebidas/ingredientes' && <ExploreCards />}\n      { location === '/explorar/comidas/area' && <ExploreArea />}\n      <MenuInferior />\n    </section>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport Header from '../components/Header';\nimport '../styles/FavoriteRecipes.css';\n\nfunction FavoriteRecipes() {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  console.log(favoriteRecipes);\n\n  const [favorite, setFavorite] = useState(favoriteRecipes);\n  const [copyUrl, setCopyUrl] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  function handleFilter({ target }) {\n    const { value } = target;\n    setFilter(value);\n  }\n\n  function filterRecipes() {\n    if (filter === 'all') return favorite;\n    if (filter !== 'all') {\n      return favorite.filter((recipe) => recipe.type === filter);\n    }\n  }\n\n  const copyLink = ({ type, id }) => {\n    copy(`http://localhost:3000/${type}s/${id}`);\n    setCopyUrl('Link copiado!');\n    setInterval(() => setCopyUrl(''), '2000');\n  };\n\n  const clickdisfavor = (id) => {\n    const newFavorites = favorite.filter((item) => item.id !== id);\n    console.log(newFavorites);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n    setFavorite(newFavorites);\n  };\n\n  const recipes = filterRecipes();\n\n  return (\n    <div className=\"favorite-recipes-section\">\n\n      <Header />\n      {/* <Link to=\"/perfil\">\n        <img src={ profileIcon } alt=\"user\" />\n      </Link>\n      <h1>Receitas Favoritas</h1> */}\n      <button\n        value=\"all\"\n        type=\"button\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={ (e) => handleFilter(e) }\n      >\n        All\n      </button>\n      <button\n        value=\"comida\"\n        type=\"button\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={ (e) => handleFilter(e) }\n      >\n        Food\n      </button>\n      <button\n        value=\"bebida\"\n        type=\"button\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={ (e) => handleFilter(e) }\n      >\n        Drinks\n      </button>\n      {\n        favorite ? recipes.map((item, index) => {\n          if (item.type === 'comida') {\n            return (\n              <section key={ index }>\n                <Link to={ `/${item.type}s/${item.id}` }>\n                  <img\n                    width=\"200px\"\n                    data-testid={ `${index}-horizontal-image` }\n                    alt={ `recipe ${item.name}` }\n                    src={ item.image }\n                  />\n                  <span>{ copyUrl }</span>\n                  <span\n                    data-testid={ `${index}-horizontal-top-text` }\n                  >\n                    { `${item.area} - ${item.category}` }\n                  </span>\n                  <span data-testid={ `${index}-horizontal-name` }>{ item.name }</span>\n                </Link>\n                <button\n                  type=\"button\"\n                  onClick={ () => copyLink(item) }\n                >\n                  <img\n                    data-testid={ `${index}-horizontal-share-btn` }\n                    alt=\"share\"\n                    src={ shareIcon }\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={ () => clickdisfavor(item.id) }\n                >\n                  <img\n                    data-testid={ `${index}-horizontal-favorite-btn` }\n                    src={ blackHeartIcon }\n                    alt=\"favorite\"\n                  />\n                </button>\n              </section>\n            );\n          }\n          return (\n            <section key={ index }>\n              <Link to={ `/${item.type}s/${item.id}` }>\n                <img\n                  width=\"200px\"\n                  data-testid={ `${index}-horizontal-image` }\n                  alt={ `recipe ${item.name}` }\n                  src={ item.image }\n                />\n                <span>{ copyUrl }</span>\n                <span\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  { item.alcoholicOrNot }\n                </span>\n                <span data-testid={ `${index}-horizontal-name` }>{ item.name }</span>\n              </Link>\n              <button\n                type=\"button\"\n                onClick={ () => copyLink(item) }\n              >\n                <img\n                  data-testid={ `${index}-horizontal-share-btn` }\n                  alt=\"share\"\n                  src={ shareIcon }\n                />\n              </button>\n              <button\n                type=\"button\"\n                onClick={ () => clickdisfavor(item.id) }\n              >\n                <img\n                  data-testid={ `${index}-horizontal-favorite-btn` }\n                  src={ blackHeartIcon }\n                  alt=\"favorite\"\n                />\n              </button>\n            </section>\n          );\n        }) : ''\n      }\n    </div>\n  );\n}\n\nexport default FavoriteRecipes;\n","import React from 'react';\nimport emptyDish from '../images/emptyDish.png';\nimport '../styles/NotFound.css';\n\nexport default function NotFound() {\n  return (\n    <div className=\"not-found-section\">\n      <img src={ emptyDish } alt=\"empty dish\" />\n      <h2>Not Found</h2>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport Header from '../components/Header';\nimport shareIcon from '../images/shareIcon.svg';\nimport '../styles/RecipesDone.css';\n\nexport default function RecipesDone() {\n  const recipesDone = JSON.parse(localStorage.getItem('doneRecipes'));\n  const [rpsDone, setRpsDone] = useState(recipesDone);\n  const [copyText, setCopyText] = useState('');\n\n  const filterRecipesDone = (type) => {\n    if (type === 'all') {\n      setRpsDone(recipesDone);\n    } else {\n      const filterResult = recipesDone.filter((item) => item.type === type);\n      setRpsDone(filterResult);\n    }\n  };\n\n  const handleClickCopy = (recipe) => {\n    copy(`http://localhost:3000/${recipe.type}s/${recipe.id}`);\n    setCopyText('Link copiado!');\n    setInterval(() => setCopyText(''), '2000');\n  };\n\n  function renderTags(itemOfMap, indexOfMap) {\n    if (itemOfMap.type === 'comida') {\n      return (\n        itemOfMap.tags.map((itemTag, indexTag) => (\n          <p\n            data-testid={ `${indexOfMap}-${itemTag}-horizontal-tag` }\n            key={ indexTag }\n          >\n            { itemTag }\n          </p>\n        ))\n      );\n    }\n  }\n\n  return (\n    <div className=\"recipes-done-section\">\n      <Header />\n      <p>{copyText}</p>\n      {/* <header>\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img src={ profileIcon } alt=\"profileIcon\" />\n          </button>\n        </Link>\n        <h1>Receitas Feitas</h1>\n        <p>{copyText}</p>\n      </header> */}\n      <section>\n        <button\n          className=\"buttons\"\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ () => filterRecipesDone('all') }\n        >\n          All\n        </button>\n        <button\n          className=\"buttons\"\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => filterRecipesDone('comida') }\n        >\n          Food\n        </button>\n        <button\n          className=\"buttons\"\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => filterRecipesDone('bebida') }\n        >\n          Drink\n        </button>\n      </section>\n      {\n        recipesDone ? rpsDone.map((item, index) => {\n          if (item.type === 'comida') {\n            return (\n              <section className=\"recipes-done\">\n                <Link to={ `/comidas/${item.id}` }>\n                  <img\n                    width=\"200px\"\n                    data-testid={ `${index}-horizontal-image` }\n                    alt=\"recipe\"\n                    src={ item.image }\n                  />\n                </Link>\n                <section>\n                  <button\n                    type=\"button\"\n                    onClick={ () => handleClickCopy(item) }\n                  >\n                    <img\n                      data-testid={ `${index}-horizontal-share-btn` }\n                      alt=\"share\"\n                      src={ shareIcon }\n                    />\n                  </button>\n                  <Link to={ `/comidas/${item.id}` }>\n                    <h4 data-testid={ `${index}-horizontal-name` }>{ item.name }</h4>\n                  </Link>\n                  <p data-testid={ `${index}-horizontal-top-text` }>\n                    {`${item.area} - ${item.category}` }\n                  </p>\n                  <b />\n                  <p data-testid={ `${index}-horizontal-done-date` }>{ item.doneDate }</p>\n                  <b />\n                  { renderTags(item, index) }\n                </section>\n              </section>\n            );\n          }\n          return (\n            <section className=\"recipes-done\" key={ index }>\n              <Link to={ `/bebidas/${item.id}` }>\n                <img\n                  width=\"200px\"\n                  data-testid={ `${index}-horizontal-image` }\n                  alt=\"recipe\"\n                  src={ item.image }\n                />\n              </Link>\n              <section>\n                <button\n                  type=\"button\"\n                  onClick={ () => handleClickCopy(item) }\n                >\n                  <img\n                    data-testid={ `${index}-horizontal-share-btn` }\n                    alt=\"share\"\n                    src={ shareIcon }\n                  />\n                </button>\n                <Link to={ `/bebidas/${item.id}` }>\n                  <h4 data-testid={ `${index}-horizontal-name` }>{ item.name }</h4>\n                </Link>\n                <p data-testid={ `${index}-horizontal-done-date` }>{ item.doneDate }</p>\n                <p\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  { item.alcoholicOrNot }\n                </p>\n                <b />\n              </section>\n            </section>\n          );\n        }) : null\n      }\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nexport default function RecipeMealProgressComp({ propsMealProgress }) {\n  const {\n    recipesSelectedId,\n    setFavorited,\n    handleChangeCheck,\n    recipeProgress,\n    ingredientChecked,\n    favorited,\n  } = propsMealProgress;\n  const [copyText, setCopyText] = useState();\n\n  const history = useHistory();\n\n  const handleFavoriteClick = () => {\n    if (!favorited) {\n      const favoriteStorage = JSON.parse(localStorage.favoriteRecipes);\n      const newFavoriteStorage = favoriteStorage.concat({\n        id: recipeProgress.idMeal,\n        type: 'comida',\n        area: recipeProgress.strArea,\n        category: recipeProgress.strCategory,\n        alcoholicOrNot: '',\n        name: recipeProgress.strMeal,\n        image: recipeProgress.strMealThumb,\n      });\n      localStorage.favoriteRecipes = JSON.stringify(newFavoriteStorage);\n      setFavorited(true);\n    } else {\n      const favoriteStorage = JSON.parse(localStorage.favoriteRecipes);\n      const newFavoriteStorage = favoriteStorage.filter(\n        (recipe) => recipe.id !== recipesSelectedId,\n      );\n      localStorage.favoriteRecipes = JSON.stringify(newFavoriteStorage);\n      setFavorited(false);\n    }\n  };\n\n  function returnIngredients() {\n    return Object.entries(recipeProgress)\n      .filter((ingredient) => ingredient[0].includes('strIngredient'))\n      .filter((ingredienteNotNul) => ingredienteNotNul[1] !== ''\n        && ingredienteNotNul[1] !== null)\n      .map((item) => item[1]);\n  }\n\n  const checkBox = returnIngredients();\n\n  function addRecipeDone() {\n    const date = new Date();\n    const svDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n    const objDoneRecipes = {\n      id: recipeProgress.idMeal,\n      type: 'comida',\n      area: recipeProgress.strArea,\n      category: recipeProgress.strCategory,\n      alcoholicOrNot: '',\n      name: recipeProgress.strMeal,\n      image: recipeProgress.strMealThumb,\n      doneDate: svDate,\n      tags: recipeProgress.strTags.split(','),\n    };\n    const recipeDone = JSON.parse(localStorage.doneRecipes);\n    const newDoneStorage = recipeDone.concat(objDoneRecipes);\n    localStorage.doneRecipes = JSON.stringify(newDoneStorage);\n    history.push('/receitas-feitas');\n  }\n\n  const handleClickCopy = () => {\n    copy(`http://localhost:3000/comidas/${recipeProgress.idMeal}`);\n    setCopyText('Link copiado!');\n    setInterval(() => setCopyText(''), '2000');\n  };\n\n  return (\n    <div className=\"progress-section\">\n      <img\n        src={ recipeProgress.strMealThumb }\n        data-testid=\"recipe-photo\"\n        className=\"recipes-img\"\n        alt={ recipeProgress.strMeal }\n      />\n      <div className=\"buttons-favorites-section-progress\">\n        <button\n          className=\"buttons-share-favorite-progress\"\n          data-testid=\"share-btn\"\n          type=\"button\"\n          onClick={ handleClickCopy }\n        >\n          <img src={ shareIcon } alt=\"share icon\" />\n        </button>\n        <button\n          className=\"buttons-share-favorite-progress\"\n          type=\"button\"\n          onClick={ handleFavoriteClick }\n        >\n          <img\n            src={ favorited ? blackHeartIcon : whiteHeartIcon }\n            data-testid=\"favorite-btn\"\n            alt=\"favorite icon\"\n          />\n        </button>\n      </div>\n      <h2 data-testid=\"recipe-title\">{recipeProgress.strMeal}</h2>\n      <p>{ copyText }</p>\n      <p data-testid=\"recipe-category\">{recipeProgress.strCategory}</p>\n      <div className=\"ingredients-section-progress\">\n        <h3>Ingredients</h3>\n        {checkBox.map((itens, key) => (\n          <div key={ key } className=\"ingredients-item\">\n            <label\n              htmlFor={ itens }\n              data-testid={ `${key}-ingredient-step` }\n              className={ ingredientChecked.includes(itens) ? 'risk item' : 'norisk item' }\n            >\n              <input\n                className=\"checkbox\"\n                type=\"checkbox\"\n                checked={ ingredientChecked.includes(itens) }\n                value={ itens }\n                id={ itens }\n                onClick={ (e) => handleChangeCheck(e) }\n              />\n              <span>{itens}</span>\n            </label>\n          </div>\n        ))}\n      </div>\n      <div className=\"instructions-section-progress\">\n        <h4>Instructions</h4>\n        <p data-testid=\"instructions\">{recipeProgress.strInstructions}</p>\n      </div>\n      <div className=\"button-progress-section-progress\">\n        <button\n          disabled={ checkBox.length !== ingredientChecked.length }\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n          onClick={ () => addRecipeDone() }\n        >\n          Finalizar Receita\n        </button>\n      </div>\n    </div>\n  );\n}\n\nRecipeMealProgressComp.propTypes = {\n  propsMealProgress: PropTypes.shape({\n    recipesSelectedId: PropTypes.string,\n    setFavorited: PropTypes.func,\n    handleChangeCheck: PropTypes.func,\n    checkBox: PropTypes.arrayOf(PropTypes.string),\n    recipeProgress: PropTypes.objectOf(PropTypes.string),\n    ingredientChecked: PropTypes.arrayOf(PropTypes.string),\n    favorited: PropTypes.bool,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/RecipeProgress.css';\nimport RecipeMealProgressComp from '../components/RecipeMealProgressComp';\nimport LoadingMeal from '../components/LoadingMeal';\n\nfunction RecipeMealProgress() {\n  const [recipeProgress, setRecipeProgress] = useState({});\n  const [isLoaded, setIsloaded] = useState(false);\n  const [favorited, setFavorited] = useState(false);\n  const [ingredientChecked, setIngredientChecked] = useState([]);\n\n  const history = useHistory();\n  const { pathname } = history.location;\n  const recipesSelectedId = pathname.split('/')[2];\n\n  useEffect(() => {\n    fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${recipesSelectedId}`)\n      .then((response) => response.json())\n      .then((data) => setRecipeProgress(data.meals[0]) || setIsloaded(true));\n    if (JSON.parse(localStorage.getItem('inProgressRecipes')) !== null) {\n      const saved = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (JSON.stringify(saved).includes('meals')) {\n        const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n        const ingredientsSaved = recipesInProgress.meals[`${recipesSelectedId}`] || [];\n        console.log(ingredientsSaved);\n        setIngredientChecked(ingredientsSaved);\n      }\n    }\n    if (JSON.parse(localStorage.getItem('favoriteRecipes')) !== null) {\n      const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      const favoriteRecipesFiltered = favoriteRecipes.filter(\n        (recipe) => recipe.id === recipesSelectedId,\n      );\n      setFavorited(favoriteRecipesFiltered.length > 0);\n    }\n  }, [recipesSelectedId]);\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('inProgressRecipes')) === null) {\n      const inProgress = { meals: {}, cocktails: {} };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgress));\n    }\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    recipesInProgress.meals[`${recipesSelectedId}`] = [...ingredientChecked];\n    localStorage.setItem('inProgressRecipes', JSON.stringify(recipesInProgress));\n  }, [ingredientChecked, recipesSelectedId]);\n\n  function handleChangeCheck({ target }) {\n    const { value } = target;\n    if (!ingredientChecked.includes(value)) {\n      setIngredientChecked((prevState) => ([\n        ...prevState,\n        value,\n      ]));\n    } else {\n      const filteredIngredientes = ingredientChecked.filter(\n        (ingredient) => ingredient !== value,\n      );\n      setIngredientChecked(filteredIngredientes);\n    }\n  }\n\n  const propsMealProgress = {\n    setFavorited,\n    handleChangeCheck,\n    recipeProgress,\n    ingredientChecked,\n    favorited,\n    recipesSelectedId,\n  };\n\n  return (\n    <div>\n      { isLoaded\n        ? <RecipeMealProgressComp propsMealProgress={ propsMealProgress } />\n        : <LoadingMeal /> }\n    </div>\n  );\n}\n\nexport default RecipeMealProgress;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nexport default function RecipeDrinkProgressComp({ propsDrinkProgress }) {\n  const {\n    recipesSelectedId,\n    setFavorited,\n    handleChangeCheck,\n    recipeProgress,\n    ingredientChecked,\n    favorited,\n  } = propsDrinkProgress;\n  const [copyText, setCopyText] = useState();\n\n  const history = useHistory();\n\n  const handleFavoriteClick = () => {\n    if (!favorited) {\n      const favoriteStorage = JSON.parse(localStorage.favoriteRecipes);\n      const newFavoriteStorage = favoriteStorage.concat({\n        id: recipeProgress.idDrink,\n        type: 'bebida',\n        area: recipeProgress.strArea,\n        category: recipeProgress.strCategory,\n        alcoholicOrNot: '',\n        name: recipeProgress.strDrink,\n        image: recipeProgress.strDrinkThumb,\n      });\n      localStorage.favoriteRecipes = JSON.stringify(newFavoriteStorage);\n      setFavorited(true);\n    } else {\n      const favoriteStorage = JSON.parse(localStorage.favoriteRecipes);\n      const newFavoriteStorage = favoriteStorage.filter(\n        (recipe) => recipe.id !== recipesSelectedId,\n      );\n      localStorage.favoriteRecipes = JSON.stringify(newFavoriteStorage);\n      setFavorited(false);\n    }\n  };\n\n  function returnIngredients() {\n    return Object.entries(recipeProgress)\n      .filter((ingredient) => ingredient[0].includes('strIngredient'))\n      .filter((ingredienteNotNul) => ingredienteNotNul[1] !== ''\n        && ingredienteNotNul[1] !== null)\n      .map((item) => item[1]);\n  }\n\n  const checkBox = returnIngredients();\n\n  function addRecipeDone() {\n    const date = new Date();\n    const svDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n    const objDoneRecipes = {\n      id: recipeProgress.idDrink,\n      type: 'bebida',\n      area: recipeProgress.strArea,\n      category: recipeProgress.strCategory,\n      alcoholicOrNot: recipeProgress.strAlcoholic,\n      name: recipeProgress.strDrink,\n      image: recipeProgress.strDrinkThumb,\n      doneDate: svDate,\n    };\n    const recipeDone = JSON.parse(localStorage.doneRecipes);\n    const newDoneStorage = recipeDone.concat(objDoneRecipes);\n    localStorage.doneRecipes = JSON.stringify(newDoneStorage);\n    history.push('/receitas-feitas');\n  }\n\n  const handleClickCopy = () => {\n    copy(`http://localhost:3000/bebidas/${recipeProgress.idDrink}`);\n    setCopyText('Link copiado!');\n    setInterval(() => setCopyText(''), '2000');\n  };\n\n  return (\n    <div>\n      <div className=\"progress-section\">\n        <img\n          src={ recipeProgress.strDrinkThumb }\n          data-testid=\"recipe-photo\"\n          className=\"recipes-img\"\n          alt={ recipeProgress.strDrink }\n        />\n        <div className=\"buttons-favorites-section-progress\">\n          <button\n            className=\"buttons-share-favorite-progress\"\n            data-testid=\"share-btn\"\n            type=\"button\"\n            onClick={ handleClickCopy }\n          >\n            <img src={ shareIcon } alt=\"share icon\" />\n          </button>\n          <button\n            className=\"buttons-share-favorite-progress\"\n            type=\"button\"\n            onClick={ handleFavoriteClick }\n          >\n            <img\n              src={ favorited ? blackHeartIcon : whiteHeartIcon }\n              alt=\"favorite icon\"\n              data-testid=\"favorite-btn\"\n            />\n          </button>\n        </div>\n        <h2 data-testid=\"recipe-title\">{recipeProgress.strDrink}</h2>\n        <p>{ copyText }</p>\n        <p data-testid=\"recipe-category\">{recipeProgress.strCategory}</p>\n        <div className=\"ingredients-section-progress\">\n          <h3>Ingredients</h3>\n          {checkBox.map((itens, key) => (\n            <label\n              htmlFor={ key }\n              data-testid={ `${key}-ingredient-step` }\n              className={ ingredientChecked.includes(itens) ? 'risk' : 'norisk' }\n              key={ key }\n            >\n              <input\n                type=\"checkbox\"\n                checked={ ingredientChecked.includes(itens) }\n                value={ itens }\n                id={ key }\n                onClick={ (e) => handleChangeCheck(e) }\n              />\n              {itens}\n            </label>))}\n        </div>\n        <div className=\"instructions-section-progress\">\n          <h4>Instructions</h4>\n          <p data-testid=\"instructions\">{recipeProgress.strInstructions}</p>\n        </div>\n        <div className=\"button-progress-section-progress\">\n          <button\n            disabled={ checkBox.length !== ingredientChecked.length }\n            type=\"button\"\n            data-testid=\"finish-recipe-btn\"\n            onClick={ () => addRecipeDone() }\n          >\n            Finalizar Receita\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nRecipeDrinkProgressComp.propTypes = {\n  propsDrinkProgress: PropTypes.shape({\n    recipesSelectedId: PropTypes.string,\n    setFavorited: PropTypes.func,\n    handleChangeCheck: PropTypes.func,\n    checkBox: PropTypes.arrayOf(PropTypes.string),\n    recipeProgress: PropTypes.objectOf(PropTypes.string),\n    ingredientChecked: PropTypes.arrayOf(PropTypes.string),\n    favorited: PropTypes.bool,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/RecipeProgress.css';\nimport RecipeDrinkProgressComp from '../components/RecipeDrinkProgressComp';\nimport LoadingDrink from '../components/LoadingDrink';\n\nfunction RecipeDrinkProgress() {\n  const [recipeProgress, setRecipeProgress] = useState({});\n  const [isLoaded, setIsloaded] = useState(false);\n  const [favorited, setFavorited] = useState(false);\n  const [ingredientChecked, setIngredientChecked] = useState([]);\n\n  const history = useHistory();\n  const { pathname } = history.location;\n  const recipesSelectedId = pathname.split('/')[2];\n\n  useEffect(() => {\n    fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${recipesSelectedId}`)\n      .then((response) => response.json())\n      .then((data) => setRecipeProgress(data.drinks[0]) || setIsloaded(true));\n    if (JSON.parse(localStorage.getItem('inProgressRecipes')) !== null) {\n      const saved = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (JSON.stringify(saved).includes('cocktails')) {\n        const recipesProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n        const ingredientsSaved = recipesProgress.cocktails[`${recipesSelectedId}`] || [];\n        setIngredientChecked(ingredientsSaved);\n      }\n    }\n    if (JSON.parse(localStorage.getItem('favoriteRecipes')) !== null) {\n      const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      const favoriteRecipesFiltered = favoriteRecipes.filter(\n        (recipe) => recipe.id === recipesSelectedId,\n      );\n      setFavorited(favoriteRecipesFiltered.length > 0);\n    }\n  }, [recipesSelectedId]);\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('inProgressRecipes')) === null) {\n      const inProgress = { meals: {}, cocktails: {} };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgress));\n    }\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    recipesInProgress.cocktails[`${recipesSelectedId}`] = [...ingredientChecked];\n    localStorage.setItem('inProgressRecipes', JSON.stringify(recipesInProgress));\n  }, [ingredientChecked, recipesSelectedId]);\n\n  function handleChangeCheck({ target }) {\n    const { value } = target;\n    if (!ingredientChecked.includes(value)) {\n      setIngredientChecked((prevState) => ([\n        ...prevState,\n        value,\n      ]));\n    } else {\n      const filteredIngredientes = ingredientChecked.filter(\n        (ingredient) => ingredient !== value,\n      );\n      setIngredientChecked(filteredIngredientes);\n    }\n  }\n\n  const propsDrinkProgress = {\n    setFavorited,\n    handleChangeCheck,\n    recipeProgress,\n    ingredientChecked,\n    favorited,\n    recipesSelectedId,\n  };\n\n  return (\n    <div>\n      { isLoaded\n        ? <RecipeDrinkProgressComp propsDrinkProgress={ propsDrinkProgress } />\n        : <LoadingDrink /> }\n    </div>\n  );\n}\n\nexport default RecipeDrinkProgress;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Recipes from './pages/Recipes';\nimport DetailsMeals from './pages/DetailsMeals';\nimport DetailsDrink from './pages/DetailsDrink';\nimport Perfil from './components/Perfil';\nimport Explore from './pages/Explore';\nimport FavoriteRecipes from './pages/FavoriteRecipes';\nimport NotFound from './pages/NotFound';\nimport RecipesDone from './pages/RecipesDone';\nimport RecipeMealProgress from './pages/RecipeMealProgress';\nimport RecipeDrinkProgress from './pages/RecipeDrinkProgress';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/recipes-app\" component={ Login } />\n      <Route exact path=\"/comidas\" component={ Recipes } />\n      <Route exact path=\"/Bebidas\" component={ Recipes } />\n      <Route exact path=\"/comidas/:id\" component={ DetailsMeals } />\n      <Route exact path=\"/bebidas/:id\" component={ DetailsDrink } />\n      <Route exact path=\"/perfil\" component={ Perfil } />\n      <Route exact path=\"/explorar\" component={ Explore } />\n      <Route exact path=\"/explorar/comidas\" component={ Explore } />\n      <Route exact path=\"/explorar/bebidas\" component={ Explore } />\n      <Route exact path=\"/explorar/comidas/ingredientes\" component={ Explore } />\n      <Route exact path=\"/explorar/bebidas/ingredientes\" component={ Explore } />\n      <Route exact path=\"/explorar/comidas/area\" component={ Explore } />\n      <Route exact path=\"/receitas-feitas\" component={ RecipesDone } />\n      <Route exact path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\n      <Route exact path=\"/comidas/:id/in-progress\" component={ RecipeMealProgress } />\n      <Route exact path=\"/bebidas/:id/in-progress\" component={ RecipeDrinkProgress } />\n\n      <Route component={ NotFound } />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <div className=\"meals\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\n\nexport default function RecipesAppProvider({ children }) {\n  const [mealRecipes, setMealRecipes] = useState([]);\n  const [drinkRecipes, setDrinkRecipes] = useState([]);\n  const [haveRecipes, setHaveRecipes] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [isFilterByCategory, setFilterByCategory] = useState(false);\n\n  function setIsFilterByCategory(value) {\n    setFilterByCategory(value);\n  }\n\n  function saveCategories(data) {\n    setCategories(data);\n  }\n\n  function saveMealRecipes(meals) {\n    const recipes = meals.meals;\n    setMealRecipes(recipes);\n    setHaveRecipes(true);\n  }\n\n  function saveDrinkRecipes(drinks) {\n    const recipesDrinks = drinks.drinks;\n    setDrinkRecipes(recipesDrinks);\n    setHaveRecipes(true);\n  }\n\n  function changeHaveRecipes(bool) {\n    setHaveRecipes(bool);\n  }\n\n  const context = {\n    mealRecipes,\n    drinkRecipes,\n    categories,\n    haveRecipes,\n    isFilterByCategory,\n    setMealRecipes,\n    setDrinkRecipes,\n    changeHaveRecipes,\n    saveMealRecipes,\n    saveDrinkRecipes,\n    saveCategories,\n    setIsFilterByCategory,\n  };\n\n  return (\n    <RecipesAppContext.Provider value={ context }>\n      { children }\n    </RecipesAppContext.Provider>\n  );\n}\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport RecipesAppProvider from './context/RecipesAppProvider';\n\nReactDOM.render(\n  <BrowserRouter>\n    <RecipesAppProvider>\n      <App />\n    </RecipesAppProvider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}